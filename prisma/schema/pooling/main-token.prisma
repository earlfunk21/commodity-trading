model MainToken {
  id                       String                 @id @default(nanoid(16))
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @updatedAt
  deletedAt                DateTime?
  name                     String
  code                     String                 @unique
  commodityId              String
  commodity                Commodity              @relation(fields: [commodityId], references: [id])
  commodityTypeId          String
  commodityType            CommodityType          @relation(fields: [commodityTypeId], references: [id])
  origin                   String
  performanceBondNumber    String
  insurerCompany           String
  insurancePolicyNumber    String
  certificateOfStockNumber String
  CADTNumber               String
  subTokens                SubToken[]
  tradingStart             DateTime
  tradingEnd               DateTime
  poolingStart             DateTime
  poolingEnd               DateTime
  tradingDuration          DateTime
  specs                    String
  complanId                String
  complan                  Complan                @relation(fields: [complanId], references: [id])
  purchaseTokens           PurchaseToken[]
  trades                   Trade[]
  transactions             MainTokenTransaction[]
  tradeTransactions        TradeTransaction[]
  referralCommissions      ReferralCommission[]
  pendingManagementFees    PendingManagementFee[]
  tokenValues              MainTokenValue[]       @relation("TokenValues")
  currentTokenValueId      String?
  currentTokenValue        MainTokenValue?        @relation("CurrentTokenValue", fields: [currentTokenValueId], references: [id])
  lastTokenValueId         String?
  lastTokenValue           MainTokenValue?        @relation("LastTokenValue", fields: [lastTokenValueId], references: [id])
}
